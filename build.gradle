plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'frameWork'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 웹/검증/보안
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2 로그인(Client)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT 검증(Resource Server)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // 서버 자체 발급용(필요 시) - JJWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Swagger / OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // (선택) Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // (선택) JPA & DB Driver
    // implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // runtimeOnly 'com.mysql:mysql-connector-j' // 또는 h2 등

    // 테스트용 DB 연결
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
